<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Experior.Dematic.Base</name>
    </assembly>
    <members>
        <member name="T:Experior.Dematic.Base.Devices.DematicCommunicationPoint">
            <summary>
            This is a generic type of communication point. When this is added to a conveyor
            and the PLC is set then the correct properties will be avaiable
            </summary>
        </member>
        <member name="F:Experior.Dematic.Base.Devices.DematicCommunicationPoint.commPointArrival">
            <summary>
            The MHE control object will assign an "ap_enter" method in its contructor
            </summary>
        </member>
        <member name="M:Experior.Dematic.Base.Devices.DematicCommunicationPoint.commPoint_OnSelected(Experior.Core.Parts.RigidPart)">
            <summary>
            Make the CommuncationPoint show properties when selected
            </summary>
            <param name="sender"></param>
        </member>
        <member name="P:Experior.Dematic.Base.Devices.DematicCommunicationPoint.ControllerProperties">
            <summary>
            Generic property for a PLC of any type, DatCom, DCI etc it is set when the ControllerName is set
            </summary>
        </member>
        <member name="P:Experior.Dematic.Base.Devices.DematicCommunicationPoint.Controller">
            <summary>
            This will be set by setting the ControllerName in method StandardCase.SetMHEControl(commPointInfo, this) !!
            </summary>
        </member>
        <member name="T:Experior.Dematic.Base.Devices.IPalletRouteStatus">
            <summary>
            Implementation required if connecting fix points to other conveyors
            </summary>
        </member>
        <member name="T:Experior.Dematic.Base.Devices.IRouteStatus">
            <summary>
            Implementation required if connecting fix points to other conveyors
            </summary>
        </member>
        <member name="P:Experior.Dematic.Base.Devices.DematicSensor.LoadWaiting">
            <summary>
            Is the load waiting on the entry action point i.e. waiting to be released
            </summary>
        </member>
        <member name="P:Experior.Dematic.Base.Devices.DematicSensor.PreviousActive">
            <summary>
            Only true if the previous load has not left the sensor before the next one arrives
            Possible if two loads are touching and the enter and leaving events are in the wrong
            order
            </summary>
        </member>
        <member name="P:Experior.Dematic.Base.Devices.DematicSensor.Edge">
            <summary>
            Gets or sets the edge.
            </summary>
            <value>The edge.</value>
        </member>
        <member name="M:Experior.Dematic.Base.Devices.DematicSensor.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="M:Experior.Dematic.Base.Devices.DematicSensor.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Experior.Dematic.Base.Devices.DematicSensor.ForceLoadClear(Experior.Core.Loads.Load)">
            <summary>
            If switching a load but it still covers this photocell, then force the load to clear this photocell first
            </summary>
            <param name="load">The load being switched</param>
        </member>
        <member name="F:Experior.Dematic.Base.BaseController.HandleTelegram">
            <summary>
            Handle project specific telegrams. If false is returned then the plc will handle it. If true is returned the plc expects the user to handle the telegram.
            </summary>
        </member>
        <member name="M:Experior.Dematic.Base.BaseController.HandleTelegrams(System.String[],System.String,System.UInt16)">
            <summary>
            The actual controller will handle the telegrams, this method is called when a telegram has been received
            </summary>
            <param name="telegramFields"></param>
            <param name="type"></param>
            <param name="number_of_blocks"></param>
        </member>
        <member name="T:Experior.Dematic.Base.CaseControllerConverter">
            <summary>
            Used to show a list of avialable case conveyor controllers in a drop down box
            </summary>
        </member>
        <member name="M:Experior.Dematic.Base.EuroPallet.ReleaseLoadAndClear">
            <summary>
            This will release the load and clear all stoping references WCS and PLC
            </summary>
        </member>
        <member name="M:Experior.Dematic.Base.FeedLoad.FeedTrayLoad(Experior.Core.TransportSections.ITransportSection,System.Single,Experior.Dematic.Base.BaseCaseData,Experior.Dematic.Base.TrayStatus)">
            <summary>
            Method to return a Tray load
            </summary>
            <param name="transportSection">The transport section to add the load too</param>
            <param name="distance">The position distance along the transport section</param>
            <param name="trayData">Base tray data</param>
            <param name="trayStatus">Tray status (Empty, Loaded or Stacked)</param>
            <returns>Load of type Tray</returns>
        </member>
        <member name="M:Experior.Dematic.Base.FeedLoad.GetSSCCWithCheckSum(System.String)">
            <summary>
            Takes 17 digit sscc (without checksum) and returns 18 digit sscc (with checksum).
            See http://www.gs1.org/barcodes/support/check_digit_calculator/
            </summary>
            <param name="ssccstring">17 digit sscc (without checksum)</param>
            <returns>18 digit sscc (with checksum)</returns>
        </member>
        <member name="M:Experior.Dematic.Base.ExtensionMethods.LevelasInt(System.String)">
            <summary>
            Finds the level from location
            </summary>
        </member>
        <member name="M:Experior.Dematic.Base.ExtensionMethods.Level(System.String)">
            <summary>
            Finds the level from location
            </summary>     
            <returns>The level padded to to characters</returns>
        </member>
        <member name="M:Experior.Dematic.Base.ExtensionMethods.ConvPosition(System.String)">
            <summary>
            A or B
            </summary>
        </member>
        <member name="M:Experior.Dematic.Base.ExtensionMethods.RackXLocation(System.String)">
            <summary>
            returns the destination location for a particular shuttle
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Experior.Dematic.Base.ExtensionMethods.IsRackBinLocation(System.String)">
            <summary>
            Returns true if location is a rack location
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Experior.Dematic.Base.ExtensionMethods.LoadDepth(System.String)">
            <summary>
            returns the depth to drop the load in the rack either 1 or 2
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Experior.Dematic.Base.ExtensionMethods.WithinRange(System.Single,System.Single,System.Single)">
            <summary>
            Determines whether two float values are within a set tolerance
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="acceptableDifference">The tolerance</param>
            <returns></returns>
        </member>
        <member name="T:Experior.Dematic.Base.PalletControllerConverter">
            <summary>
            Used to show a list of available Pallet conveyor controllers in a drop down box
            </summary>
        </member>
        <member name="T:Experior.Dematic.Base.IControllableInfo">
            <summary>
            Implementation required when defining info for embedded MHE_Control objects
            </summary>
        </member>
        <member name="T:Experior.Dematic.Base.IController">
            <summary>
            All controllers (PLCs etc) need to implement this interface
            </summary>
        </member>
        <member name="T:Experior.Dematic.Base.MHEControl">
            <summary>
            Generic class for all types of plant and all types of PLC protocol.
            All MHE control objects should inherit this class.
            </summary>
        </member>
        <member name="M:Experior.Dematic.Base.MHEControl.Dispose">
            <summary>
            unsubscribe from all subscribed to events here. If this is not done then setting an assembly controller to "no controller" 
            will have no effect and the events will still be received be the controller object
            </summary>
        </member>
        <member name="P:Experior.Dematic.Base.MHEControl.Info">
            <summary>
            Set this property in inherting class constructor
            This will alow a communication point to have information on the type of communication point that it is 
            </summary>
        </member>
        <member name="T:Experior.Dematic.Base.ProtocolInfo">
            <summary>
            A base class for different types of PLC protocols. 
            Inherit this class for a new info class to give the CommunicationPoint a generic type for PLC config.
            </summary>
        </member>
        <member name="M:Experior.Dematic.Base.Case_Load.ReleaseLoadAndClear">
            <summary>
            This will release the load and clear all stoping references WCS and PLC
            </summary>
        </member>
        <member name="M:Experior.Dematic.Base.StandardCase.SetMHEControl(Experior.Dematic.Base.IControllableInfo,Experior.Dematic.Base.IControllable)">
            <summary>
            Set up the PLC then set up the protocol that the PLC uses.
            Returns the controller and the controllerProperties (out MHEControl object) for the controller type and assembly
            The Info of the MHE Component must implement the IControllableInfo interface (a comment by BG)
            </summary>
            <param name="assemblyInfo"></param>
            <param name="assembly"></param>
            <returns>An MHE control object, if the controller doesnot exist (e.g. the string "No Controller") then null is returned</returns>
        </member>
        <member name="T:Experior.Dematic.Storage.Base.BK10PLCConverter">
            <summary>
            Used to show a list of avialable BK10 PLCs  
            </summary>
        </member>
        <member name="T:Experior.Dematic.Storage.Base.IBK10PLCCommon">
            <summary>
            Interface to BK10 plc´s for objects in other catalogs (Storage, BK25, etc)
            </summary>
        </member>
    </members>
</doc>
